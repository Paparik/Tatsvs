@{
    ViewData["Title"] = "Main";
}
@model Tatsvs.Models.AuthModel;

<div class="wrapper">
    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <div class="container">
            <header class="header">
                <h1 class="logo">
                    Tatsvs
                </h1>
                <button class="button button_active">
                    Выйти
                </button>
            </header>
        </div>
        @await Html.PartialAsync(Url.Content("~/Views/Home/Map.cshtml"))
    }
    else
    {
        @using (Html.BeginForm("Authorization", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()
            <div id="auth" class="auth">
                <div class="auth__container">
                    <div class="auth__title">
                        Авторизация
                    </div>
                    <div class="auth__input">
                        @*<input type="text" placeholder="Введите логин">*@
                        <input asp-for="Username" placeholder="Введите логин" type="text" class="form-control"/>
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                    <div class="auth__input">
                        @*<input type="password" placeholder="Введите пароль">*@
                        <input asp-for="Password" placeholder="Введите пароль" type="password" class="form-control"/>
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="auth__buttons">
                        <button type="submit" class="button">
                            Войти
                        </button>
                    </div>
                </div>
            </div>
        }
    }
</div>
